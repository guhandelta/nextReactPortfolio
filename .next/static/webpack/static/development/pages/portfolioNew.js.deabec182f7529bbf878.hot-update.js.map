{"version":3,"file":"static/webpack/static\\development\\pages\\portfolioNew.js.deabec182f7529bbf878.hot-update.js","sources":["webpack:///./components/form/PortInput.js","webpack:///./components/portfolios/PortfolioCreateForm.js"],"sourcesContent":["import React from 'react';\r\nimport { Button, FormGroup, Label, Input } from 'reactstrap';\r\n\r\nconst PortInput = ({\r\n    label,\r\n    type,\r\n    field, // { name, value, onChange, onBlur }\r\n    form: { touched, errors }, // also values, setXXXX, handleXXXX, dirty, isValid, status, etc.\r\n    ...props\r\n  }) => (\r\n    <FormGroup>\r\n        <Label>{label}</Label>\r\n        <Input type={text} {...field} {...props} />\r\n        {touched[field.name] &&\r\n        errors[field.name] && <div className=\"error\">{errors[field.name]}</div>}\r\n    </FormGroup>\r\n  );\r\n\r\n  export default PortInput;","// Render Prop\r\nimport React from 'react';\r\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\r\nimport { Button, FormGroup, Label } from 'reactstrap';\r\nimport PortInput from '../form/PortInput';\r\n\r\nconst validateInputs = (validate) => {\r\n    let errors = {};\r\n    // if (!values.email) {\r\n    //   errors.email = 'Required';\r\n    // } else if (\r\n    //   !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,}$/i.test(values.email)\r\n    // ) {\r\n    //   errors.email = 'Invalid email address';\r\n    // }\r\n    return errors;\r\n}\r\n\r\nconst INITIAL_VALUES = {\r\n                            title: '',\r\n                            company: '',\r\n                            location: '',\r\n                            position: '',\r\n                            descripition: '',\r\n                            startDate: '',\r\n                            endDate: '',\r\n};\r\n\r\nconst PortfolioCreateForm = () => (\r\n  <div>\r\n    <Formik\r\n      initialValues={{ email: '', password: '' }}\r\n      validate={validateInputs}\r\n      onSubmit={(values, { setSubmitting }) => {\r\n        setTimeout(() => {\r\n          alert(JSON.stringify(values, null, 2));\r\n          setSubmitting(false);\r\n        }, 400);\r\n      }}\r\n    >\r\n      {({ isSubmitting }) => (\r\n        <Form>\r\n\r\n            <Field className=\"form-control\" type=\"text\" name=\"title\" label=\"title\" component={PortInput} /> \r\n            <Field className=\"form-control\" type=\"text\" name=\"company\" label=\"company\" component={PortInput} /> \r\n            <Field className=\"form-control\" type=\"text\" name=\"location\" label=\"location\" component={PortInput} /> \r\n            <Field className=\"form-control\" type=\"text\" name=\"position\" label=\"position\" component={PortInput} /> \r\n            <Field className=\"form-control\" type=\"textarea\" name=\"descripition\" label=\"title\" component={PortInput} /> \r\n          \r\n            <FormGroup className=\"\">\r\n                <Label>Company: </Label>\r\n                <Field className=\"form-control\" type=\"text\" name=\"company\" /> \r\n                <ErrorMessage name=\"company\" component=\"div\" /> \r\n            </FormGroup>\r\n            \r\n            <FormGroup className=\"\">\r\n                <Label>Location: </Label>\r\n                <Field className=\"form-control\" type=\"text\" name=\"location\" />  \r\n                <ErrorMessage name=\"location\" component=\"div\" /> \r\n            </FormGroup>\r\n            \r\n            <FormGroup className=\"\">\r\n                <Label>Position: </Label>\r\n                <Field className=\"form-control\" type=\"text\" name=\"position\" /> \r\n                <ErrorMessage name=\"position\" component=\"div\" /> \r\n            </FormGroup>\r\n            \r\n            <FormGroup className=\"\">\r\n                <Label>Description: </Label>\r\n                <Field className=\"form-control\" type=\"textarea\" name=\"descripition\" component=\"textarea\" /> \r\n                <ErrorMessage name=\"descripition\" component=\"div\" /> \r\n            </FormGroup>\r\n            \r\n            <FormGroup className=\"\">\r\n                <Label>Start Date: </Label>\r\n                <Field className=\"form-control\" type=\"date\" name=\"startDate\" />\r\n                <ErrorMessage name=\"startDate\" component=\"div\" /> \r\n            </FormGroup>\r\n            \r\n            <FormGroup className=\"\">\r\n                <Label>End Date: </Label>\r\n                <Field className=\"form-control\" type=\"date\" name=\"endDate\" /> \r\n                <ErrorMessage name=\"endDate\" component=\"div\" />  \r\n            </FormGroup>\r\n            \r\n            <Button type=\"submit\" disabled={isSubmitting}>\r\n                Create\r\n            </Button>\r\n        </Form>\r\n      )}\r\n    </Formik>\r\n  </div>\r\n);\r\n\r\nexport default PortfolioCreateForm; "],"mappings":";;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AASA;AAAA;AAEA;AAAA;AAXA;AACA;AAcA;;;;;;;;;;;;ACliEA;;;;A","sourceRoot":""}