{"version":3,"file":"static/webpack/static\\development\\pages\\index.js.992afab4272abf1ce0f1.hot-update.js","sources":["webpack:///./node_modules/@babel/runtime-corejs2/helpers/esm/asyncToGenerator.js","webpack:///./pages/index.js"],"sourcesContent":["import _Promise from \"../../core-js/promise\";\n\nfunction asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    _Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new _Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","import React from 'react';\r\nimport BaseLayout from '../components/layouts/BaseLayout';\r\nimport axios from \"axios\";\r\n\r\nclass Index extends React.Component{\r\n\r\n    static async getInitialProps(){\r\n        const response = await axios.get('https://jsonplaceholder.typicode.com/todos/1')\r\n            .then((response) => console.log(response.data))\r\n            .catch(err => console.error(err))\r\n\r\n        return{initialData: [1,2,3,4,5]};\r\n    }\r\n    \r\n    constructor(props){\r\n        super(props);\r\n\r\n        this.state={\r\n            title: 'This is the Index page title'\r\n        }\r\n    }\r\n\r\n    componentDidMount(){\r\n        console.log('componentDidMount has been executed');\r\n    }\r\n\r\n    componentDidUpdate(){\r\n        console.log('componentDidUpdate has been executed');\r\n    }\r\n\r\n    componentWillUnmount(){\r\n        console.log('componentWillUnmount has been executed');\r\n    }\r\n\r\n    updateTitle = () =>{\r\n        this.setState({title: 'This is the updated Index page Title'});\r\n    }\r\n\r\n    render(){\r\n\r\n        const { title } = this.state;\r\n        const initialData = this.props.initialData;\r\n        return(\r\n                <BaseLayout>\r\n                    <h1>This is the Index Page</h1>   \r\n                    <h2>{ title }</h2>\r\n                    <button onClick={this.updateTitle}>Change Title</button>\r\n                </BaseLayout>             \r\n        )\r\n    }\r\n}\r\n\r\nexport default Index; "],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACpCA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;AAGA;AACA;AAAA;AACA;AAAA;AACA;;AAHA;AAIA;AAAA;AAAA;AACA;;;;;;;;;;;;;;;;;AAEA;AAAA;AACA;AADA;AACA;AAAA;AACA;AAFA;AAqBA;AAAA;AAAA;AACA;AACA;AApBA;AACA;AADA;AAHA;AAMA;AACA;;;AACA;AACA;AACA;;;AAEA;AACA;AACA;;;AAEA;AACA;AACA;;;AAMA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;AA7CA;AACA;AA+CA;;;;A","sourceRoot":""}